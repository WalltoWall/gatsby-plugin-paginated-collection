// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`sourceNodes creates nodes 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "collectionName": "name",
        "hasNextPage": true,
        "hasPreviousPage": false,
        "id": "createNodeId",
        "index": 0,
        "internal": Object {
          "contentDigest": "createContentDigest",
          "type": "PaginatedCollectionPage",
        },
        "nextPage": "createNodeId",
        "nodeCount": 10,
        "nodes": Array [
          Object {
            "foo": 0,
          },
          Object {
            "foo": 1,
          },
          Object {
            "foo": 2,
          },
          Object {
            "foo": 3,
          },
          Object {
            "foo": 4,
          },
          Object {
            "foo": 5,
          },
          Object {
            "foo": 6,
          },
          Object {
            "foo": 7,
          },
          Object {
            "foo": 8,
          },
          Object {
            "foo": 9,
          },
        ],
        "previousPage": undefined,
      },
    ],
    Array [
      Object {
        "collectionName": "name",
        "hasNextPage": true,
        "hasPreviousPage": true,
        "id": "createNodeId",
        "index": 1,
        "internal": Object {
          "contentDigest": "createContentDigest",
          "type": "PaginatedCollectionPage",
        },
        "nextPage": "createNodeId",
        "nodeCount": 10,
        "nodes": Array [
          Object {
            "foo": 10,
          },
          Object {
            "foo": 11,
          },
          Object {
            "foo": 12,
          },
          Object {
            "foo": 13,
          },
          Object {
            "foo": 14,
          },
          Object {
            "foo": 15,
          },
          Object {
            "foo": 16,
          },
          Object {
            "foo": 17,
          },
          Object {
            "foo": 18,
          },
          Object {
            "foo": 19,
          },
        ],
        "previousPage": "createNodeId",
      },
    ],
    Array [
      Object {
        "collectionName": "name",
        "hasNextPage": true,
        "hasPreviousPage": true,
        "id": "createNodeId",
        "index": 2,
        "internal": Object {
          "contentDigest": "createContentDigest",
          "type": "PaginatedCollectionPage",
        },
        "nextPage": "createNodeId",
        "nodeCount": 10,
        "nodes": Array [
          Object {
            "foo": 20,
          },
          Object {
            "foo": 21,
          },
          Object {
            "foo": 22,
          },
          Object {
            "foo": 23,
          },
          Object {
            "foo": 24,
          },
          Object {
            "foo": 25,
          },
          Object {
            "foo": 26,
          },
          Object {
            "foo": 27,
          },
          Object {
            "foo": 28,
          },
          Object {
            "foo": 29,
          },
        ],
        "previousPage": "createNodeId",
      },
    ],
    Array [
      Object {
        "collectionName": "name",
        "hasNextPage": false,
        "hasPreviousPage": true,
        "id": "createNodeId",
        "index": 3,
        "internal": Object {
          "contentDigest": "createContentDigest",
          "type": "PaginatedCollectionPage",
        },
        "nextPage": undefined,
        "nodeCount": 5,
        "nodes": Array [
          Object {
            "foo": 30,
          },
          Object {
            "foo": 31,
          },
          Object {
            "foo": 32,
          },
          Object {
            "foo": 33,
          },
          Object {
            "foo": 34,
          },
        ],
        "previousPage": "createNodeId",
      },
    ],
    Array [
      Object {
        "firstPageSize": 10,
        "id": "createNodeId",
        "internal": Object {
          "contentDigest": "createContentDigest",
          "type": "PaginatedCollection",
        },
        "lastPageSize": 5,
        "name": "name",
        "nodeCount": 35,
        "pageCount": 4,
        "pageSize": 10,
        "pages": Array [
          "createNodeId",
          "createNodeId",
          "createNodeId",
          "createNodeId",
        ],
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
    Object {
      "type": "return",
      "value": undefined,
    },
    Object {
      "type": "return",
      "value": undefined,
    },
    Object {
      "type": "return",
      "value": undefined,
    },
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`sourceNodes creates types 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "   \\"\\"\\"
  A page in a paginated collection.
  \\"\\"\\"
  type PaginatedCollectionPage implements Node @dontInfer {
    \\"Name of the collection to which this page belongs.\\"
    collectionName: String!

    \\"The next page.\\"
    nextPage: ID @link

    \\"Whether or not a page exists after this page.\\"
    hasNextPage: Boolean!

    \\"The previous page.\\"
    previousPage: ID @link

    \\"Whether or not a page exists before this page.\\"
    hasPreviousPage: Boolean!

    \\"Number of nodes in this page.\\"
    nodeCount: Int!

    \\"Nodes in this page.\\"
    nodes: [JSON!]!
  }

  \\"\\"\\"
  A paginated collection of nodes.
  \\"\\"\\"
  type PaginatedCollection implements Node @dontInfer {
    \\"Name of the collection.\\"
    name: String!

    \\"Maximum number of nodes in each page.\\"
    pageSize: Int!

    \\"Number of nodes in the first page.\\"
    firstPageSize: Int!

    \\"Number of nodes in the last page.\\"
    lastPageSize: Int!

    \\"Number of nodes in the collection.\\"
    nodeCount: Int!

    \\"Number of pages in the collection.\\"
    pageCount: Int!

    \\"Pages in the collection.\\"
    pages: [ID!]! @link
  }
",
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;
